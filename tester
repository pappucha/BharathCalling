<%@ Control Language="C#" AutoEventWireup="true" CodeFile="ucHospitalSearch.ascx.cs" Inherits="UserControls_ucHospitalSearch" %>
<%@ Register Assembly="AjaxControlToolkit" Namespace="AjaxControlToolkit" TagPrefix="cc1" %>

<link href="../Styles/HealthStyle.css" rel="stylesheet" type="text/css" />
<table>
   <tr>
        <td>
            <asp:Button ID="btnSearchHospital" runat="server" text="Search" CommandName="SearchHospital"
                CssClass="btnStyle" onclick="btnSearchHospital_Click" Width="50px" />


                  <cc1:ModalPopupExtender ID="ModalPopupSearchOrAddHospital" RepositionMode="None"
                    Drag="false" DropShadow="false" BackgroundCssClass="modalPopupBackground" TargetControlID="btnSearchProxy"
                    PopupControlID="SearchOrAddHospital" CancelControlID="btnSearchClose" runat="server">
                </cc1:ModalPopupExtender>
                 <asp:Button ID="btnSearchProxy" runat="server" CssClass="ucControl"/>            
                
                <asp:Panel ID="SearchOrAddHospital" runat="server" CssClass="panel1" GroupingText="Hospital Search">
                        <table class="poupTable" width="550px">
                             <tr>
                                <td colspan="2" style="text-align: center; background-color: Red; color: White;">
                                    <span><strong>Fill Data And Proceed for Search</strong></span> &nbsp;
                                </td>
                             </tr>
                              <tr>
                                <td style="width: 50%;">
                                    NSP Type
                                    <asp:HiddenField ID="hdnClaimType" runat="server" />
                                    <asp:HiddenField ID="hdnARYTPolicy" runat="server" />
                                    <asp:HiddenField ID="hdnPolicyNo" runat="server" />
                                </td>
                                <td style="width: 50%;">
                                    <asp:DropDownList ID="ddlSearchNSPType" runat="server" Width="220px"  AutoPostBack="true"
                                        onselectedindexchanged="ddlSearchNSPType_SelectedIndexChanged">
                                    </asp:DropDownList></td>
                            </tr>
                             <tr>
                                <td>
                                    <asp:Label ID="lblAddHospitalName" runat="server" Text="Hospital Name"></asp:Label></td>
                                <td>                                                                    
                                    <asp:TextBox ID="txtAddHospitalName" runat="server" Width="200px" MaxLength="100" onKeyUp="javascript:return ConvertToUpper(this);" onkeypress="javascript:return fnNumberAlphaDashSpaceBackSpaceKey(event);"></asp:TextBox></td>
                             </tr>
                             <tr>
                                <td>
                                    NSP ID
                                </td>
                                <td>
                                    <asp:TextBox ID="txtSearchNSPID" runat="server" Width="200px"></asp:TextBox>
                                </td>
                            </tr>
                             <tr id="trAddress1" runat="server">
                                <td><asp:Label ID="lblAddress" runat="server" Text="Hospital Address"></asp:Label></td>
                                <td>
                                    <asp:TextBox ID="txtAddAddress1" runat="server" Width="200px" MaxLength="100" onkeypress="javascript:return fnNumberAlphaDashSpaceBackSpaceKey(event);"></asp:TextBox></td>
                             </tr>
                             <tr  id="trAddress2" runat="server">
                                <td>&nbsp;</td>
                                <td>
                                    <asp:TextBox ID="txtAddAddress2" runat="server" Width="200px" MaxLength="100" onkeypress="javascript:return fnNumberAlphaDashSpaceBackSpaceKey(event);"></asp:TextBox>                           
                                </td>
                             </tr>   
                             <tr  id="trAddress3" runat="server">
                                <td>&nbsp;</td>
                                <td>
                                    <asp:TextBox ID="txtAddAddress3" runat="server" Width="200px" MaxLength="100" onkeypress="javascript:return fnNumberAlphaDashSpaceBackSpaceKey(event);"></asp:TextBox>                           
                                </td>
                             </tr>                            
                             <tr ID="trAddress44" runat="server">
                                 <td>
                                     <asp:Label ID="lblLocation" runat="server" Text="Location"></asp:Label>
                                 </td>
                                 <td>
                                     <asp:TextBox ID="txtLocation" runat="server"  Width="200px"></asp:TextBox>
                                 </td>
                             </tr>
                             <tr ID="trAddress5" runat="server">
                                 <td>
                                     <asp:Label ID="lblPinCode" runat="server" Text="Pin Code"></asp:Label>
                                 </td>
                                 <td>
                                     <asp:TextBox ID="txtPinCode" runat="server" MaxLength="6" onpaste="javascript:return false"
                                         onkeypress="javascript:return fnInetgerFieldValidation(event);" Width="200px"></asp:TextBox>
                                 </td>
                             </tr>
                             <tr>
                                <td>
                                    State
                                </td>
                                <td>
                                    <asp:DropDownList ID="ddlSearchState" runat="server" Width="220px" 
                                        OnSelectedIndexChanged="ddlSearchState_SelectedIndexChanged" 
                                        AutoPostBack="True">
                                    </asp:DropDownList>
                                </td>
                            </tr>
                             <tr>
                                <td>
                                    City
                                </td>
                                <td>
                                    <asp:UpdatePanel ID="updCity" runat="server">
                                        <ContentTemplate>
                                            <asp:DropDownList ID="ddlSearchCity" runat="server" Width="220px">
                                            </asp:DropDownList>
                                        </ContentTemplate>
                                        <Triggers>
                                            <asp:AsyncPostBackTrigger ControlID="ddlSearchState" EventName="SelectedIndexChanged" />
                                        </Triggers>
                                    </asp:UpdatePanel>
                                </td>
                            </tr>
                             <tr>
                                <td colspan="2" style="text-align: center; background-color: Red; color: White;">                                    
                                    <asp:Button ID="btnSearch" runat="server" text="Search"   CssClass="btnStyle" 
                                        onclick="btnSearch_Click" /> 
                                    <asp:Button ID="btnSaveHospital" runat="server" text="Save"  CssClass="btnStyle"
                                        onclick="btnSaveHospital_Click" Visible="False" />  
                                    <asp:Button ID="btnSearchClose" runat="server" text="Close"  CssClass="btnStyle" />  
                                </td>
                            </tr>
                             <tr>
                                <td colspan="2"> 
                              <%--   <asp:UpdatePanel ID="upGrid" runat="server">
                                   <ContentTemplate>--%>
                                   <div>
                                        <asp:Label ID="lblSearchMessage" ForeColor="Red" Style="font-weight: 700;text-align:left;" runat="server"></asp:Label>
                                   </div>
                                    <div style="overflow: scroll; height: 250px;">
                                    <asp:GridView ID="gvSearchHospital" runat="server" Width="100%" AutoGenerateColumns="false"
                                        HeaderStyle-CssClass="gridViewHeader">
                                        <Columns>
                                            <asp:TemplateField HeaderText="NSP ID">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblHospitalId" runat="server" Width="70px" Text='<%# Eval("NSPID_VAR") %>'></asp:Label>                                                
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                            <asp:TemplateField HeaderText="Name of the Hospital">
                                                <ItemTemplate>
                                                    <asp:HiddenField ID="hdnHospitalId" runat="server"  Value='<%# Eval("NSPID_VAR") %>'/>
                                                    <asp:Label ID="lblHospitalName" runat="server" Width="100px" Text='<%# Eval("HSNAME_VAR") %>'></asp:Label>
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                            <asp:TemplateField HeaderText="Address">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblAddress" runat="server" Width="100px" Text='<%# Eval("HSADDRESS1_VAR") %>'></asp:Label>
                                                    <asp:Label ID="lblAddress2" Visible="false" runat="server" Width="100px" Text='<%# Eval("HSADDRESS2_VAR") %>'></asp:Label>
                                                    <asp:Label ID="lblAddress3" Visible="false" runat="server" Width="100px" Text='<%# Eval("HSADDRESS3_VAR") %>'></asp:Label>
                                                </ItemTemplate>
                                            </asp:TemplateField>  
                                            <asp:TemplateField HeaderText="State">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblState" runat="server" Width="100px" Text='<%# Eval("TXT_STATE") %>'></asp:Label>
                                                     <asp:HiddenField id="hdnStateCd" Value='<%#Eval("HSSTATE_NUM")%>' runat="server"/>
                                                </ItemTemplate>
                                            </asp:TemplateField>                                          
                                            <asp:TemplateField HeaderText="City">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblCity" runat="server" Width="100px" Text='<%# Eval("TXT_CITYDISTRICT") %>'></asp:Label>
                                                     <asp:HiddenField id="hdnCityCd" Value='<%#Eval("HSDISTRICT_NUM")%>' runat="server"/>
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                            <asp:TemplateField HeaderText="Location">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblLocation" runat="server" Width="100px" Text='<%# Eval("HSLOCATION_VAR") %>'></asp:Label>
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                            <asp:TemplateField HeaderText="Pin Code">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblPinCode" runat="server" Width="100px" Text='<%# Eval("HSPINCODE_NUM") %>'></asp:Label>
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                              <asp:TemplateField Visible="false">
                                                <ItemTemplate>
                                                    <asp:Label ID="lblEmailId" Visible="false" runat="server" Width="100px" Text='<%# Eval("HSEMAILID_VAR") %>'></asp:Label>
                                                    <asp:Label ID="lblContactNo" Visible="false" runat="server" Width="100px" Text='<%# Eval("TELNO") %>'></asp:Label>
                                                    <asp:Label ID="lblContactPerson" Visible="false" runat="server" Width="100px" Text='<%# Eval("specialinterest_var") %>'></asp:Label>
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                            <asp:TemplateField>
                                                <ItemTemplate>
                                                    <asp:Button ID="btnSelectHospital" runat="server" Text="Select" CssClass="btnStyle"
                                                        Width="60px" onclick="btnSelectHospital_Click" />
                                                </ItemTemplate>
                                            </asp:TemplateField>
                                        </Columns>
                                        <HeaderStyle CssClass="gridViewHeader" />
                                    </asp:GridView>
                                    </div> 
                                </td>
                            </tr>
                        </table>   
                </asp:Panel>
              
        </td>
   </tr>
</table>


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using NSPWCFService;
using Claim_WCFService;
using System.Configuration;

public partial class UserControls_ucHospitalSearch : System.Web.UI.UserControl
{   
    public event EventHandler SelectButtonClick;
    public event EventHandler SearchHospitalClick;
    public string _name;
    public string _address;
    public string _address2;
    public string _address3;
    public string _nspid;
    public string _hospitalcity;
    public int _hospitalcityid;
    public string _hospitalstate;
    public int _hospitalstateid;
    public string _HospitalLocation;
    public string _HospitalPinCode;
    public string _HospitalContactNo;
    public string _HospitalContactPerson;
    public string _HospitalEmailId;

    public string HospitalName
    {
        get { return _name; }
        set { _name = value; }
    }

    public string HospitalPinCode
    {
        get { return _HospitalPinCode; }
        set { _HospitalPinCode = value; }
    }

    public string HospitalContactNo
    {
        get { return _HospitalContactNo; }
        set { _HospitalContactNo = value; }
    }

    public string HospitalContactPerson
    {
        get { return _HospitalContactPerson; }
        set { _HospitalContactPerson = value; }
    }

    public string HospitalEmailID
    {
        get { return _HospitalEmailId; }
        set { _HospitalEmailId = value; }
    }

    public string HospitalAddress
    {
        get { return _address; }
        set { _address = value; }
    }

    public string HospitalAddress2
    {
        get { return _address2; }
        set { _address2 = value; }
    }

    public string HospitalAddress3
    {
        get { return _address3; }
        set { _address3 = value; }
    }

    public string NSPId
    {
        get { return _nspid; }
        set { _nspid = value; }
    }

    public string HospitalCity
    {
        get { return _hospitalcity; }
        set { _hospitalcity = value; }
    }

    public int HospitalCityId
    {
        get { return _hospitalcityid; }
        set { _hospitalcityid = value; }
    }

    public string HospitalState
    {
        get { return _hospitalstate; }
        set { _hospitalstate = value; }
    }

    public int HospitalStateId
    {
        get { return _hospitalstateid; }
        set { _hospitalstateid = value; }
    }

    public string HospitalLocation
    {
        get { return _HospitalLocation; }
        set { _HospitalLocation = value; }
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            bindState();
            BindNSPType_Search();
            if (Convert.ToString(hdnClaimType.Value) == "CASHLESS")
                btnSaveHospital.Visible = false;
        }
    }
    
    public void bindState()
    {
        ddlSearchState.DataTextField = "txt_State";
        ddlSearchState.DataValueField = "Num_State_Cd";
        List<AddressDetails> stateNames = new List<AddressDetails>();
        if (Cache["stateNames"] == null)
        {
            AddressClient dbAddressClient = new AddressClient();
            stateNames = dbAddressClient.getState();
            Cache["stateNames"] = stateNames;
        }
        ddlSearchState.DataSource = (List<AddressDetails>)Cache["stateNames"]; ;
        ddlSearchState.DataBind();
        ddlSearchState.Items.Insert(0, "--Select--");
        ddlSearchState.Items[0].Value = "0";
        ddlSearchCity.Items.Insert(0, "--Select--");
        ddlSearchCity.Items[0].Value = "0";
        ddlSearchCity.Enabled = false;
    }

    private void BindNSPType_Search()
    {
        NSPMastersClient objTypeClient = new NSPMastersClient();
        List<E_NSP_BCDE_Type> objlstType;
        try
        {

            objlstType = objTypeClient.getINSPBCDETypeList(0);
            List<E_NSP_BCDE_Type> objNSPTypeList = new List<E_NSP_BCDE_Type>();
            if (Convert.ToString(hdnClaimType.Value) != "CASHLESS")
                objNSPTypeList = (from rc in objlstType where (rc.NSPTYPEID == 1 || rc.NSPTYPEID == 11) select rc).ToList<E_NSP_BCDE_Type>();
            else
                objNSPTypeList = (from rc in objlstType where (rc.NSPTYPEID == 1) select rc).ToList<E_NSP_BCDE_Type>();
           
            ddlSearchNSPType.Items.Clear();
            ddlSearchNSPType.DataSource = objNSPTypeList;
            ddlSearchNSPType.DataTextField = "TYPENAME";
            ddlSearchNSPType.DataValueField = "NSPTYPEID";
            ddlSearchNSPType.DataBind();
            ddlSearchNSPType.Items.Insert(0, new ListItem("--Select--", "0"));
            ddlSearchNSPType.Items[0].Value = "0";
        }
        catch (Exception ex)
        { }
        finally { }
    }

    protected void ddlSearchState_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            if (ddlSearchState.SelectedIndex > 0)
            {
                AddressClient dbAddressClient = new AddressClient();
                ddlSearchCity.DataTextField = "txt_CityDistrict";
                ddlSearchCity.DataValueField = "Num_CityDistrict_Cd";
                ddlSearchCity.DataSource = dbAddressClient.getCity(Convert.ToInt32(ddlSearchState.SelectedItem.Value));
                ddlSearchCity.DataBind();
                ddlSearchCity.Items.Insert(0, "--Select--");
                ddlSearchCity.Items[0].Value = "0";
                ddlSearchCity.Enabled = true;
            }
            else
            {
                ddlSearchCity.Enabled = false;
                ddlSearchCity.SelectedIndex = 0;
            }
        }
        catch (Exception ex)
        { }
        finally { }
        ModalPopupSearchOrAddHospital.Show();
    }
    
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        try
        {
            bool isValidated = ValidateSearchData();
            if (isValidated)
            {
                NSP_BasicDetailsClient NSPBasicDetailsClient = new NSP_BasicDetailsClient();
                E_NSP_BasicDetails NSPBasicDetail = new NSPWCFService.E_NSP_BasicDetails();
                NSPBasicDetail.NSPTYPEID_NUM = Convert.ToInt32(ddlSearchNSPType.SelectedItem.Value);
                NSPBasicDetail.HSNAME_VAR = txtAddHospitalName.Text.Trim();
                NSPBasicDetail.NSPID_VAR = txtSearchNSPID.Text.Trim();
                NSPBasicDetail.HSSTATE_NUM = Convert.ToInt32(ddlSearchState.SelectedValue);
                NSPBasicDetail.HSDISTRICT_NUM = Convert.ToInt32(ddlSearchCity.SelectedValue);
                NSPBasicDetail.HSPINCODE_NUM = Convert.ToDecimal(string.IsNullOrEmpty(txtPinCode.Text)?"0":txtPinCode.Text);
                List<E_NSP_BasicDetails> objNspBasicDetails = NSPBasicDetailsClient.GetSearchResults(NSPBasicDetail);
                if (!(string.IsNullOrEmpty(hdnClaimType.Value)))
                {
                    if (hdnClaimType.Value == "CASHLESS")
                    {
                        if (objNspBasicDetails.Count > 0)
                        {
                            objNspBasicDetails = (objNspBasicDetails.Where(t => t.EMPANELSTATCASHLESS_NUM == 1)).ToList<E_NSP_BasicDetails>();
                            if (Convert.ToString(hdnARYTPolicy.Value) == "Y")
                            {
                                svcGrpBenfit.GroupBenefitClient grpBenefitClient = new svcGrpBenfit.GroupBenefitClient();
                                svcGrpBenfit.Enroll_Pol_Hosp_List hospitalMethodInput = new svcGrpBenfit.Enroll_Pol_Hosp_List();
                                hospitalMethodInput.Policy_no_TXT = hdnPolicyNo.Value;
                                List<svcGrpBenfit.Enroll_Pol_Hosp_List> enrollHospitalList = grpBenefitClient.getEnroll_Pol_Hosp_List(hospitalMethodInput);
                                if (enrollHospitalList.Count > 0)
                                {
                                    objNspBasicDetails = (from nspHSlist in objNspBasicDetails
                                                       join enrollHSList in enrollHospitalList on nspHSlist.NSPID_VAR equals enrollHSList.NSP_ID_Txt
                                                       select nspHSlist).Distinct().ToList<E_NSP_BasicDetails>();
                                }
                                else
                                    objNspBasicDetails = new List<E_NSP_BasicDetails>();
                            }
                        }
                    }
                }

                gvSearchHospital.DataSource = objNspBasicDetails;
                gvSearchHospital.DataBind();
                lblSearchMessage.Text = "";
                if (!(objNspBasicDetails.Count > 0))
                {
                    lblSearchMessage.Text = "No Data Found.";
                }
            }
            else
            {
                gvSearchHospital.DataSource = null;
                gvSearchHospital.DataBind();
            }
        }
        catch (Exception ex)
        { }
        finally { }
        ModalPopupSearchOrAddHospital.Show();
    }

    /// <summary>
    /// to Validate Data for Search
    /// </summary>
    /// <returns></returns>
    public bool ValidateSearchData()
    {
        bool isValid = true;
        lblSearchMessage.Text = string.Empty;
        string strMessage = string.Empty;
        strMessage = "<ul>";
        if (string.IsNullOrEmpty(txtAddHospitalName.Text))
        {
            isValid = false;
            strMessage = strMessage + "<li> Please Enter Hospital Name.</br></li>";
        }
        else if (txtAddHospitalName.Text.Trim().Length < 3)
        {
                isValid = false;
                strMessage = strMessage + "<li> Please Enter Hospital name at least 3 Character.</li></ul>";
        }
        lblSearchMessage.Text = strMessage;
        return isValid;
    }

    /// <summary>
    /// Validate Data For Save
    /// </summary>
    /// <returns></returns>
    public bool ValidateSavedata()
    {
        bool isValid = true;
        lblSearchMessage.Text = string.Empty;
        string strMessage = string.Empty;
        strMessage = "<ul>";
        if(ddlSearchNSPType.SelectedIndex<=0)
        {
            isValid = false;
            strMessage =strMessage+ "<li> Please Select NSP Type.</br></li>";
        }
        if (string.IsNullOrEmpty(txtAddHospitalName.Text.Trim()))
        {
            isValid = false;
            strMessage = strMessage + "<li> Please Enter Hospital Name.</br></li>";
        }
        if (string.IsNullOrEmpty(txtLocation.Text.Trim()))
        {
            isValid = false;
            strMessage = strMessage + "<li> Please enter Hospital Location.</br></li>";
        }
        if (string.IsNullOrEmpty(txtPinCode.Text.Trim()))
        {
            isValid = false;
            strMessage = strMessage + "<li> Please enter Hospital Pin Code.</br></li>";
        }
        if (ddlSearchState.SelectedIndex<=0)
        {
            isValid = false;
            strMessage = strMessage + "<li> Please Select Hospital State.</br></li>";
        }
        if (ddlSearchCity.SelectedIndex <= 0)
        {
            isValid = false;
            strMessage = strMessage + "<li> Please Select Hospital City.</br></li></ul>";
        }
        lblSearchMessage.Text = strMessage;
        return isValid;
    }

    protected void btnSaveHospital_Click(object sender, EventArgs e)
    {
        bool isValidated = ValidateSavedata();
        if (isValidated)
        {
            NSP_BasicDetailsClient objBasicDetails = new NSP_BasicDetailsClient();
            E_NSP_BasicDetails objNspBasicDetails = new E_NSP_BasicDetails();
            int intNSPType = ddlSearchNSPType.SelectedItem.Value == "0" ? 0 : Convert.ToInt32(ddlSearchNSPType.SelectedItem.Value);
            string strHospitalName = txtAddHospitalName.Text.ToString().Trim();
            string strHospitalAddress1 = txtAddAddress1.Text.ToString().Trim();
            string strHospitalAddress2 = txtAddAddress2.Text.ToString().Trim();
            string strHospitalAddress3 = txtAddAddress3.Text.ToString().Trim();
            string strHospitalState = ddlSearchState.SelectedItem.Value == "0" ? null : ddlSearchState.SelectedItem.Text;
            string strHospitalCity = ddlSearchCity.SelectedItem.Value == "0" ? null : ddlSearchCity.SelectedItem.Text;
            int intStateid = ddlSearchState.SelectedItem.Value == "0" ? 0 : Convert.ToInt32(ddlSearchState.SelectedItem.Value);
            int intCityid = ddlSearchCity.SelectedItem.Value == "0" ? 0 : Convert.ToInt32(ddlSearchCity.SelectedItem.Value);
            decimal pinCode = Convert.ToDecimal(string.IsNullOrEmpty(txtPinCode.Text) ? "0" : txtPinCode.Text);
            string errorMessage=string.Empty;
            objNspBasicDetails = objBasicDetails.CreatENSP("", strHospitalName, strHospitalAddress1, strHospitalAddress2, strHospitalAddress3, intStateid, intCityid, pinCode, intNSPType,0, string.Empty, string.Empty, string.Empty, txtLocation.Text.Trim());
            string existanceMessage =ConfigurationManager.AppSettings["NSPExistanceMessage"];
            if (!(objNspBasicDetails.MSG == existanceMessage))
            {
                NSPId = objNspBasicDetails.NSPID_VAR;
                HospitalName = strHospitalName;
                HospitalAddress = strHospitalAddress1 + " " + strHospitalAddress2 + " " + strHospitalAddress3;
                HospitalCity = strHospitalCity;
                HospitalCityId = intCityid;
                HospitalState = strHospitalState;
                HospitalStateId = intStateid;
                SelectButtonClick(sender, e);
                ModalPopupSearchOrAddHospital.Hide();
            }
            else
            {
                lblSearchMessage.Text ="NSP Already Exists with Provided Hospiatal Name,State,City And Location";
                ModalPopupSearchOrAddHospital.Show();
                gvSearchHospital.DataSource = null;
                gvSearchHospital.DataBind();
            }
        }
        else
        {
            gvSearchHospital.DataSource = null;
            gvSearchHospital.DataBind();
            ModalPopupSearchOrAddHospital.Show();
        }
    }

    protected void btnSelectHospital_Click(object sender, EventArgs e)
    {
        bool b = false;
        int index = ((GridViewRow)((Button)sender).NamingContainer).RowIndex;

        HiddenField hdnNSPId = (HiddenField)gvSearchHospital.Rows[index].FindControl("hdnHospitalId");
        Label lblHospitalName = (Label)gvSearchHospital.Rows[index].FindControl("lblHospitalName");
        Label lblAddress = (Label)gvSearchHospital.Rows[index].FindControl("lblAddress");
        Label lblAddress2 = (Label)gvSearchHospital.Rows[index].FindControl("lblAddress2");
        Label lblAddress3 = (Label)gvSearchHospital.Rows[index].FindControl("lblAddress3");
        Label lblCity = (Label)gvSearchHospital.Rows[index].FindControl("lblCity");
        HiddenField hdnCityId = (HiddenField)gvSearchHospital.Rows[index].FindControl("hdnCityCd");
        Label lblState = (Label)gvSearchHospital.Rows[index].FindControl("lblState");
        Label lblLocation = (Label)gvSearchHospital.Rows[index].FindControl("lblLocation");
        Label lblPinCode = (Label)gvSearchHospital.Rows[index].FindControl("lblPinCode");
        Label lblEmailId = (Label)gvSearchHospital.Rows[index].FindControl("lblEmailId");
        Label lblContactNo = (Label)gvSearchHospital.Rows[index].FindControl("lblContactNo");
        Label lblContactPerson = (Label)gvSearchHospital.Rows[index].FindControl("lblContactPerson");
        HiddenField hdnStateId = (HiddenField)gvSearchHospital.Rows[index].FindControl("hdnStateCd"); 

        HospitalName = lblHospitalName.Text;
        HospitalAddress = lblAddress.Text;
        HospitalAddress2 = lblAddress2.Text;
        HospitalAddress3 = lblAddress3.Text;
        NSPId = hdnNSPId.Value;
        HospitalCity = lblCity.Text;
        HospitalCityId =hdnCityId.Value=="" ? 0: Convert.ToInt32(hdnCityId.Value);
        HospitalState = lblState.Text;
        HospitalStateId = hdnStateId.Value == "" ? 0 : Convert.ToInt32(hdnStateId.Value);
        HospitalLocation = lblLocation.Text;
        HospitalPinCode = lblPinCode.Text;
        HospitalEmailID = lblEmailId.Text;
        HospitalContactNo = lblContactNo.Text;
        HospitalContactPerson = lblContactPerson.Text;
        SelectButtonClick(sender, e);

        ModalPopupSearchOrAddHospital.Hide();
    }

    protected void btnSearchHospital_Click(object sender, EventArgs e)
    {
        bindState();
        BindNSPType_Search();
       // btnSearch.CommandArgument=
        ModalPopupSearchOrAddHospital.Show();
    }

    /// <summary>
    /// To Set ClaimType That Helps in Hospital Search
    /// </summary>
    /// <param name="claimType"></param>
    public void setClaimTypeForSearch(string claimType)
    {
        hdnClaimType.Value = claimType;
    }

    protected void ddlSearchNSPType_SelectedIndexChanged(object sender, EventArgs e)
    {
        ModalPopupSearchOrAddHospital.Show();
        if (ddlSearchNSPType.SelectedIndex > 1)
                btnSaveHospital.Visible = true;
        else
            btnSaveHospital.Visible = false;

        if (Convert.ToString(hdnClaimType.Value) == "CASHLESS")
            btnSaveHospital.Visible = false;
    }
}


----------------------------------------End---------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using NSPWCFService;
using Claim_WCFService;
using System.Configuration;

public partial class UserControls_ucClinicSearch : System.Web.UI.UserControl
{   
    public event EventHandler SelectButtonClick;
    public event EventHandler SearchHospitalClick;
    public string _clinicname;
    public string _address;
    public string _clinicid;
    public string _city;
    public int _cityid;
    public string _state;
    public int _stateid;
    public string _clinicLocation;
    public string _PinCode;
    public string _ContactNo;
    public string _EmailId;
    public string _PANNo;

    public string ClinicName
    {
        get { return _clinicname; }
        set { _clinicname = value; }
    }

    public string PinCode
    {
        get { return _PinCode; }
        set { _PinCode = value; }
    }

    public string ContactNo
    {
        get { return _ContactNo; }
        set { _ContactNo = value; }
    }

    public string EmailID
    {
        get { return _EmailId; }
        set { _EmailId = value; }
    }

    public string ClinicAddress
    {
        get { return _address; }
        set { _address = value; }
    }

    //public string Address1
    //{
    //    get { return _address1; }
    //    set { _address1 = value; }
    //}

    //public string Address2
    //{
    //    get { return _address2; }
    //    set { _address2 = value; }
    //}

    //public string Address3
    //{
    //    get { return _address3; }
    //    set { _address3 = value; }
    //}

    public string ClinicId
    {
        get { return _clinicid; }
        set { _clinicid = value; }
    }

    public string City
    {
        get { return _city; }
        set { _city = value; }
    }

    public int CityId
    {
        get { return _cityid; }
        set { _cityid = value; }
    }

    public string State
    {
        get { return _state; }
        set { _state = value; }
    }

    public int StateId
    {
        get { return _stateid; }
        set { _stateid = value; }
    }

    public string Location
    {
        get { return _clinicLocation; }
        set { _clinicLocation = value; }
    }

    public string PANNo
    {
        get { return _PANNo; }
        set { _PANNo = value; }
    }
    

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
            bindState();
    }
    
    public void bindState()
    {
        ddlSearchState.DataTextField = "txt_State";
        ddlSearchState.DataValueField = "Num_State_Cd";
        List<AddressDetails> stateNames = new List<AddressDetails>();
        if (Cache["stateNames"] == null)
        {
            AddressClient dbAddressClient = new AddressClient();
            stateNames = dbAddressClient.getState();
            Cache["stateNames"] = stateNames;
        }
        ddlSearchState.DataSource = (List<AddressDetails>)Cache["stateNames"]; ;
        ddlSearchState.DataBind();
        ddlSearchState.Items.Insert(0, "--Select--");
        ddlSearchState.Items[0].Value = "0";
        ddlSearchCity.Items.Insert(0, "--Select--");
        ddlSearchCity.Items[0].Value = "0";
        ddlSearchCity.Enabled = false;
    }

    protected void ddlSearchState_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            if (ddlSearchState.SelectedIndex > 0)
            {
                AddressClient dbAddressClient = new AddressClient();
                ddlSearchCity.DataTextField = "txt_CityDistrict";
                ddlSearchCity.DataValueField = "Num_CityDistrict_Cd";
                ddlSearchCity.DataSource = dbAddressClient.getCity(Convert.ToInt32(ddlSearchState.SelectedItem.Value));
                ddlSearchCity.DataBind();
                ddlSearchCity.Items.Insert(0, "--Select--");
                ddlSearchCity.Items[0].Value = "0";
                ddlSearchCity.Enabled = true;
            }
            else
            {
                ddlSearchCity.Enabled = false;
                ddlSearchCity.SelectedIndex = 0;
            }
        }
        catch (Exception ex)
        { }
        finally { }
        ModalPopupSearchOrAddClinic.Show();
    }
    
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        try
        {
                ClaimDetailsClient dbClaimDetailsClient=new ClaimDetailsClient();
                ClinicDetails  clinicDetail = new ClinicDetails();
                clinicDetail.ClinicName_Var=txtClinicName.Text;
                clinicDetail.ClinicStateId_Num=Convert.ToInt32(ddlSearchState.SelectedValue);
                clinicDetail.ClinicCityId_num=Convert.ToInt32(ddlSearchCity.SelectedValue);
                clinicDetail.ClinicPinCode_Num=txtPinCode.Text;
                clinicDetail.ClinicLocation_Var=txtClinicLocation.Text;
                clinicDetail.ClinicContactNo_Var=txtClinicContactNo.Text;
                List<ClinicDetails> ClinicDetails = dbClaimDetailsClient.searchClinicDetails(clinicDetail);
                gvSearchClinic.DataSource = ClinicDetails;
                gvSearchClinic.DataBind();
                lblSearchMessage.Text = "";
                if (!(ClinicDetails.Count > 0))
                {
                    lblSearchMessage.Text = "No Data Found.";
                }
        }
        catch (Exception ex)
        { }
        finally { }
        ModalPopupSearchOrAddClinic.Show();
    }

    protected void btnSaveHospital_Click(object sender, EventArgs e)
    {
        lblSearchMessage.Text = string.Empty;
        try
        {
            ClaimDetailsClient dbClaimDetailsClient = new ClaimDetailsClient();
            ClinicDetails clinicDetail = new ClinicDetails();
            clinicDetail.ClinicName_Var = txtClinicName.Text;
            clinicDetail.ClinicAddress_Var = txtClinicAddress.Value;
            clinicDetail.ClinicState_Var = ddlSearchState.SelectedItem.Text;
            clinicDetail.ClinicCity_Var = ddlSearchCity.SelectedItem.Text;
            clinicDetail.ClinicStateId_Num = Convert.ToInt32(ddlSearchState.SelectedValue);
            clinicDetail.ClinicCityId_num = Convert.ToInt32(ddlSearchCity.SelectedValue);
            clinicDetail.ClinicPinCode_Num = txtPinCode.Text;
            clinicDetail.ClinicLocation_Var = txtClinicLocation.Text;
            clinicDetail.ClinicContactNo_Var = txtClinicContactNo.Text;
            clinicDetail.ClinicPANNo_Var = txtPANNo.Text;
            clinicDetail.ClinicEmailID_Var = txtClinicEmailID.Text;

            string errorMessage = string.Empty;
            Int64 clinicId = dbClaimDetailsClient.insertClinicDetails(clinicDetail);
            if (clinicId > 0)
            {
                ClinicId =Convert.ToString(clinicId);
                ClinicAddress=txtClinicAddress.Value;
                City = ddlSearchCity.SelectedItem.Text;
                State = ddlSearchState.SelectedItem.Text;
                Location = txtClinicLocation.Text;
                PinCode = txtPinCode.Text;
                SelectButtonClick(sender, e);
            }
            else
                lblSearchMessage.Text = "Data Save has been failed";
        }
        catch (Exception ex)
        {
            lblSearchMessage.Text = ex.Message;
            ModalPopupSearchOrAddClinic.Show();
        }
        finally { }
    }

    protected void btnSelectClinic_Click(object sender, EventArgs e)
    {
        bool b = false;
        int index = ((GridViewRow)((Button)sender).NamingContainer).RowIndex;
        HiddenField hdnClinicId = (HiddenField)gvSearchClinic.Rows[index].FindControl("hdnClinicId");
        Label lblClinicName = (Label)gvSearchClinic.Rows[index].FindControl("lblClinicName");
        Label lblAddress = (Label)gvSearchClinic.Rows[index].FindControl("lblAddress");
        Label lblClinicCity = (Label)gvSearchClinic.Rows[index].FindControl("lblClinicCity");
        HiddenField hdnCityCode = (HiddenField)gvSearchClinic.Rows[index].FindControl("hdnCityCode");
        Label lblClinicState = (Label)gvSearchClinic.Rows[index].FindControl("lblClinicState");
        HiddenField hdnStateCode = (HiddenField)gvSearchClinic.Rows[index].FindControl("hdnStateCode");
        Label lblClinicLocation = (Label)gvSearchClinic.Rows[index].FindControl("lblClinicLocation");
        Label lblClinicPinCode = (Label)gvSearchClinic.Rows[index].FindControl("lblClinicPinCode");
        Label lblEmailId = (Label)gvSearchClinic.Rows[index].FindControl("lblEmailId");
        Label lblContactNo = (Label)gvSearchClinic.Rows[index].FindControl("lblContactNo");
        Label lblPANNo = (Label)gvSearchClinic.Rows[index].FindControl("lblPANNo");

        ClinicName = lblClinicName.Text;
        ClinicId = hdnClinicId.Value;
        ClinicAddress = lblAddress.Text;
        City = lblClinicCity.Text;
        CityId = Convert.ToInt32(string.IsNullOrEmpty(hdnCityCode.Value)? "0" : hdnCityCode.Value);
        State = lblClinicState.Text;
        StateId = Convert.ToInt32(string.IsNullOrEmpty(hdnStateCode.Value) ? "0" : hdnStateCode.Value);
        Location = lblClinicLocation.Text;
        PinCode = lblClinicPinCode.Text;
        EmailID = lblEmailId.Text;
        ContactNo = lblContactNo.Text;
        PANNo = lblPANNo.Text;
        SelectButtonClick(sender, e);
        ModalPopupSearchOrAddClinic.Hide();
    }

    protected void btnSearchClinic_Click(object sender, EventArgs e)
    {
        bindState();
        ModalPopupSearchOrAddClinic.Show();
    }
}
